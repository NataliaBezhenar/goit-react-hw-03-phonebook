{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleNameChange","e","setState","currentTarget","value","handleNumberChange","handleSubmit","preventDefault","props","onSubmit","reset","className","this","htmlFor","type","onChange","pattern","title","required","id","placeholder","Component","ContactList","contacts","onDeleteContact","map","contact","onClick","Filter","App","filter","addContact","find","alert","newContact","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deef8832.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport \"./ContactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      name: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleNumberChange = (e) => {\r\n    this.setState({\r\n      number: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"Phonebook\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId} className=\"Phonebook__label\">\r\n          Name\r\n          <input\r\n            className=\"Phonebook__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            id={this.nameInputId}\r\n            placeholder=\"John Johnson\"\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.numberInputId} className=\"Phonebook__label\">\r\n          Number\r\n          <input\r\n            className=\"Phonebook__input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleNumberChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            id={this.numberInputId}\r\n            placeholder=\"320-320-320\"\r\n          />\r\n        </label>\r\n        <button className=\"Phonebook__button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className=\"ContactList\">\n    {contacts.map((contact) => (\n      <li className=\"ContactList__item\" key={contact.id}>\n        {contact.name}: {contact.number}\n        <button\n          className=\"ContactList__button\"\n          onClick={() => onDeleteContact(contact.id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import React from \"react\";\nimport \"./Filter.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className=\"Filter__label\">\n    Find contacts by name:{\" \"}\n    <input\n      type=\"text\"\n      className=\"Filter__input\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(() => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className=\"Phonebook__wrapper\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts </h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}